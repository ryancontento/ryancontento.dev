<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lifecycle on Ryan Contento Blog</title>
    <link>https://ryancontento.dev/tags/lifecycle/</link>
    <description>Recent content in Lifecycle on Ryan Contento Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Â© 2020 copyright text.</copyright>
    <lastBuildDate>Mon, 04 Jul 2022 18:13:24 -0400</lastBuildDate><atom:link href="https://ryancontento.dev/tags/lifecycle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blazor Component Lifecycle</title>
      <link>https://ryancontento.dev/posts/blazor-component-lifecycle/</link>
      <pubDate>Mon, 04 Jul 2022 18:13:24 -0400</pubDate>
      
      <guid>https://ryancontento.dev/posts/blazor-component-lifecycle/</guid>
      <description>Blazor is a component based framework, and like all of these modern frameworks, every component has a lifecycle. They are rendered, they exist in the UI, and eventually are disposed. There are 7 main methods that handle the lifecycle of a Blazor/razor component. These components are processed with a set of synchronous and asynchronous methods. All Blazor lifecycle methods are provided by the ComponentBase class, which all components inherit from. For the methods other than the first one we will cover, the synchronous version is always called before the asynchronous one.</description>
    </item>
    
  </channel>
</rss>
