<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.NET on Ryan Contento Blog</title>
    <link>https://ryancontento.dev/tags/.net/</link>
    <description>Recent content in .NET on Ryan Contento Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2020 copyright text.</copyright>
    <lastBuildDate>Mon, 04 Jul 2022 18:13:24 -0400</lastBuildDate><atom:link href="https://ryancontento.dev/tags/.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blazor Component Lifecycle</title>
      <link>https://ryancontento.dev/posts/blazor-component-lifecycle/</link>
      <pubDate>Mon, 04 Jul 2022 18:13:24 -0400</pubDate>
      
      <guid>https://ryancontento.dev/posts/blazor-component-lifecycle/</guid>
      <description>Blazor is a component based framework, and like all of these modern frameworks, every component has a lifecycle. They are rendered, they exist in the UI, and eventually are disposed. There are 7 main methods that handle the lifecycle of a Blazor/razor component, and one other that will need to be mentioned. These components are processed with a set of synchronous and asynchronous methods. All Blazor lifecycle methods are provided by the ComponentBase class.</description>
    </item>
    
    <item>
      <title>Introduction to Blazor</title>
      <link>https://ryancontento.dev/posts/introduction-to-blazor/</link>
      <pubDate>Sun, 03 Jul 2022 21:58:06 -0400</pubDate>
      
      <guid>https://ryancontento.dev/posts/introduction-to-blazor/</guid>
      <description>Blazor is Microsofts latest SPA (Single Page Application) framework. Blazor is open source, cross platform, and uses the power of WebAssembly to allow us to use .NET in the browser! If you love C#, .NET MVC, or just new and interesting frameworks, Blazor may be for you.
What’s WebAssembly? WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.</description>
    </item>
    
  </channel>
</rss>
